<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:SuperPostDroidPunk.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="SuperPostDroidPunk.Views.MainWindow"
        Icon="/Assets/SuperPostDroidPunk-icon.ico"
        Title="SuperPostDroidPunk">

  <Design.DataContext>
    <vm:MainWindowViewModel/>
  </Design.DataContext>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="16*" MinWidth="150"/>
      <ColumnDefinition Width="auto" />
      <ColumnDefinition Width="70*" MinWidth="300"/>
    </Grid.ColumnDefinitions>
    <TabControl>
      <TabItem Header="History">
        <Grid RowDefinitions="auto,*">
          <WrapPanel Orientation="Horizontal">
            <Button Cursor="Hand" MaxHeight="32" Command="{Binding SaveModifiedResponses}" Margin="5">
              <Viewbox>
                <Canvas Width="24" Height="24">
                  <Path Fill="{DynamicResource NotificationCardSuccessBackgroundBrush}" Data="M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z" />
                </Canvas>
              </Viewbox>
              <Button.Styles>
                <Style Selector="Button">
                  <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
                  <Setter Property="BorderThickness" Value="1"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardSuccessBackgroundBrush}"/>
                </Style>
                <Style Selector="Button:pointerover /template/ ContentPresenter">
                  <Setter Property="Width" Value="35"/>
                </Style>
                <Style Selector="Button:pressed  /template/ ContentPresenter">
                  <Setter Property="Width" Value="30"/>
                </Style>
              </Button.Styles>
            </Button>
            <Button Cursor="Hand" MaxHeight="32" Command="{Binding CopyResponseToCollection}" Margin="5">
              <Viewbox>
                <Canvas Width="24" Height="24">
                  <Path Fill="{DynamicResource NotificationCardInformationBackgroundBrush}" Data="M5.59,7.41L7,6L13,12L7,18L5.59,16.59L10.17,12L5.59,7.41M11.59,7.41L13,6L19,12L13,18L11.59,16.59L16.17,12L11.59,7.41Z" />
                </Canvas>
              </Viewbox>
              <Button.Styles>
                <Style Selector="Button">
                  <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
                  <Setter Property="BorderThickness" Value="1"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardInformationBackgroundBrush}"/>
                </Style>
                <Style Selector="Button:pointerover /template/ ContentPresenter">
                  <Setter Property="Width" Value="35"/>
                </Style>
                <Style Selector="Button:pressed  /template/ ContentPresenter">
                  <Setter Property="Width" Value="30"/>
                </Style>
              </Button.Styles>
            </Button>
            <Button Cursor="Hand" MaxHeight="32" Command="{Binding DeleteSelectedResponses}" Margin="5">
              <Viewbox>
                <Canvas Width="24" Height="24">
                  <Path Fill="{DynamicResource NotificationCardErrorBackgroundBrush}" Data="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" />
                </Canvas>
              </Viewbox>
              <Button.Styles>
                <Style Selector="Button">
                  <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
                  <Setter Property="BorderThickness" Value="1"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardErrorBackgroundBrush}"/>
                </Style>
                <Style Selector="Button:pointerover /template/ ContentPresenter">
                  <Setter Property="Width" Value="35"/>
                </Style>
                <Style Selector="Button:pressed  /template/ ContentPresenter">
                  <Setter Property="Width" Value="30"/>
                </Style>
              </Button.Styles>
            </Button>
          </WrapPanel>
          <ListBox Items="{Binding History, Mode=TwoWay}" SelectedItem="{Binding SelectedHistory}" Grid.Row="1" Margin="-5">
            <ListBox.ItemTemplate>
              <DataTemplate>
                <Grid ColumnDefinitions="Auto,*" RowDefinitions="Auto, Auto, Auto" Margin="5">
                  <CheckBox IsChecked="{Binding IsSelected}" HorizontalAlignment="Center" Margin="2"/>
                  <TextBox Text="{Binding Name, Mode=TwoWay}" Grid.Column="1" Watermark="Name" Margin="2,3" HorizontalAlignment="Stretch" BorderThickness="0,0,0,2"/>
                  <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1">
                    <TextBlock Text="{Binding HttpMethod, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2,3"/>
                    <TextBox Text="{Binding Url, Mode=TwoWay}" IsReadOnly="True" Margin="2,3" HorizontalAlignment="Stretch" BorderThickness="0,0,0,1"/>
                  </StackPanel>
                  <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Notes, Mode=TwoWay}" Watermark="Description" HorizontalAlignment="Stretch" Margin="2,3" BorderThickness="0,0,0,2"/>
                </Grid>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </Grid>
      </TabItem>
      <TabItem Header="Collections">
        <Grid RowDefinitions="auto,*">
          <WrapPanel Orientation="Horizontal">
            <Button Cursor="Hand" MaxHeight="32" Command="{Binding SaveModifiedResponses}" Margin="5">
              <Viewbox>
                <Canvas Width="24" Height="24">
                  <Path Fill="{DynamicResource NotificationCardSuccessBackgroundBrush}" Data="M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z" />
                </Canvas>
              </Viewbox>
              <Button.Styles>
                <Style Selector="Button">
                  <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
                  <Setter Property="BorderThickness" Value="1"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardSuccessBackgroundBrush}"/>
                </Style>
                <Style Selector="Button:pointerover /template/ ContentPresenter">
                  <Setter Property="Width" Value="35"/>
                </Style>
                <Style Selector="Button:pressed  /template/ ContentPresenter">
                  <Setter Property="Width" Value="30"/>
                </Style>
              </Button.Styles>
            </Button>
            <Button Cursor="Hand" MaxHeight="32" Command="{Binding CopyResponseToCollection}" Margin="5">
              <Viewbox>
                <Canvas Width="24" Height="24">
                  <Path Fill="{DynamicResource NotificationCardInformationBackgroundBrush}" Data="M5.59,7.41L7,6L13,12L7,18L5.59,16.59L10.17,12L5.59,7.41M11.59,7.41L13,6L19,12L13,18L11.59,16.59L16.17,12L11.59,7.41Z" />
                </Canvas>
              </Viewbox>
              <Button.Styles>
                <Style Selector="Button">
                  <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
                  <Setter Property="BorderThickness" Value="1"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardInformationBackgroundBrush}"/>
                </Style>
                <Style Selector="Button:pointerover /template/ ContentPresenter">
                  <Setter Property="Width" Value="35"/>
                </Style>
                <Style Selector="Button:pressed  /template/ ContentPresenter">
                  <Setter Property="Width" Value="30"/>
                </Style>
              </Button.Styles>
            </Button>
            <Button Cursor="Hand" MaxHeight="32" Command="{Binding DeleteSelectedResponses}" Margin="5">
              <Viewbox>
                <Canvas Width="24" Height="24">
                  <Path Fill="{DynamicResource NotificationCardErrorBackgroundBrush}" Data="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" />
                </Canvas>
              </Viewbox>
              <Button.Styles>
                <Style Selector="Button">
                  <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
                  <Setter Property="BorderThickness" Value="1"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardErrorBackgroundBrush}"/>
                </Style>
                <Style Selector="Button:pointerover /template/ ContentPresenter">
                  <Setter Property="Width" Value="35"/>
                </Style>
                <Style Selector="Button:pressed  /template/ ContentPresenter">
                  <Setter Property="Width" Value="30"/>
                </Style>
              </Button.Styles>
            </Button>
          </WrapPanel>

          <TreeView Items="{Binding Tree}" Grid.Row="1" Margin="-5">
            <TreeView.ItemTemplate>
              <TreeDataTemplate ItemsSource="{Binding Children}">
                <Grid ColumnDefinitions="auto,*">
                  <Canvas Width="24" Margin="0,5,0,0">
                    <Path Fill="{Binding Icon.Fill}" Data="{Binding Icon.Data}" />
                  </Canvas>
                  <StackPanel Orientation="Vertical" Grid.Column="1">
                    <TextBox Text="{Binding Name, Mode=TwoWay}" Watermark="Name" Margin="2" BorderThickness="0,0,0,2"/>
                    <TextBox Text="{Binding Notes, Mode=TwoWay}" Watermark="Description" Margin="2" BorderThickness="0,0,0,2"/>
                  </StackPanel>
                </Grid>
              </TreeDataTemplate>
            </TreeView.ItemTemplate>
          </TreeView>

        </Grid>
      </TabItem>
    </TabControl>

    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Grid.RowSpan="3" Background="{DynamicResource NotificationCardInformationBackgroundBrush}"/>

    <Grid Grid.Column="2">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" MaxHeight="30"/>
        <RowDefinition Height="Auto" MinHeight="200"/>
        <RowDefinition Height="*" MinHeight="200"/>
      </Grid.RowDefinitions>

      <Grid ColumnDefinitions="auto,1*,auto,6*,auto">
        <TextBlock Text="Method" VerticalAlignment="Center" Margin="5,5,2,5"/>
        <ComboBox Grid.Column="1" VerticalAlignment="Center" Margin="0,5" Items="{Binding HttpMethods}" SelectedItem="{Binding SelectedMethod}"/>
        <TextBlock Text="Url" Grid.Column="2" VerticalAlignment="Center" Margin="5,5,2,5"/>
        <TextBox Name="UrlTextBox" VerticalAlignment="Center" Text="{Binding Url}" Watermark="API Url" Grid.Column="3" Margin="0,5" AcceptsReturn="False" AcceptsTab="False"/>
        <StackPanel Grid.Column="4" Orientation="Horizontal" Margin="5">
          <CheckBox Content="Save In History" Margin="0,0,5,0" IsChecked="{Binding IsSaveInHistory}"/>
          <TextBlock Text="{Binding StatusCode}" Margin="0,0,5,0" VerticalAlignment="Center" IsVisible="{Binding IsStatusCodeVisible}"/>
          <Button Name="SendButton" MaxHeight="32" Cursor="Hand" VerticalAlignment="Center" CommandParameter="{Binding #UrlTextBox.Text}">
            <Canvas Width="20" Height="20">
              <Path Fill="{DynamicResource NotificationCardWarningBackgroundBrush}" Data="M2,21L23,12L2,3V10L17,12L2,14V21Z" />
            </Canvas>
            <Button.Styles>
              <Style Selector="Button">
                <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardWarningBackgroundBrush}"/>
              </Style>
              <Style Selector="Button:pointerover /template/ ContentPresenter">
                <Setter Property="Width" Value="35"/>
              </Style>
              <Style Selector="Button:pressed  /template/ ContentPresenter">
                <Setter Property="Width" Value="30"/>
              </Style>
            </Button.Styles>
          </Button>
        </StackPanel>
      </Grid>

      <TabControl Grid.Row="1" Grid.Column="2" Margin="5" MaxHeight="300" VerticalAlignment="Top">
        <TabItem Header="Params">
          <ScrollViewer>
            <Grid ColumnDefinitions="auto,auto" RowDefinitions="auto,auto">
              <ListBox Items="{Binding Params, Mode=TwoWay}">
                <ListBox.ItemTemplate>
                  <DataTemplate>
                    <Grid ColumnDefinitions="Auto,Auto,Auto,Auto">
                      <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"/>
                      <TextBox Grid.Column="1" Text="{Binding Key, Mode=TwoWay}" Watermark="Key" Margin="2,3" MinWidth="50" MaxWidth="200" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                      <TextBox Grid.Column="2" Text="{Binding Value, Mode=TwoWay}" Watermark="Value" Margin="2,3" MinWidth="50" MaxWidth="200" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                      <TextBox Grid.Column="3" Text="{Binding Notes, Mode=TwoWay}" Watermark="Description" Margin="2,3" MinWidth="50" MaxWidth="200" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                    </Grid>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
              <Button Cursor="Hand" MaxHeight="32" Command="{Binding AddNewParam}" Margin="2,3" Grid.Column="1" Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Right" VerticalContentAlignment="Top">
                <Viewbox>
                  <Canvas Width="24" Height="24">
                    <Path Fill="{DynamicResource NotificationCardInformationBackgroundBrush}" Data="M2,16H10V14H2M18,14V10H16V14H12V16H16V20H18V16H22V14M14,6H2V8H14M14,10H2V12H14V10Z" />
                  </Canvas>
                </Viewbox>
                <Button.Styles>
                  <Style Selector="Button">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource NotificationCardInformationBackgroundBrush}"/>
                  </Style>
                  <Style Selector="Button:pointerover /template/ ContentPresenter">
                    <Setter Property="Width" Value="35"/>
                  </Style>
                  <Style Selector="Button:pressed  /template/ ContentPresenter">
                    <Setter Property="Width" Value="30"/>
                  </Style>
                </Button.Styles>
              </Button>
            </Grid>
          </ScrollViewer>
        </TabItem>

        <TabItem Header="Authorization">
          <Grid ColumnDefinitions="auto,auto" RowDefinitions="auto,auto">
            <ComboBox Margin="0,5" Items="{Binding AuthorizationTypes}" SelectedItem="{Binding SelectedAuthType}" MinWidth="50" MaxWidth="200" VerticalAlignment="Top" HorizontalAlignment="Left"/>
            <Grid ColumnDefinitions="auto" RowDefinitions="auto,auto" Grid.Column="1" IsVisible="{Binding IsAuthBasic}" Margin="0,5">
              <TextBox Text="{Binding AuthUsername, Mode=TwoWay}" Watermark="Username" Margin="2,0" MinWidth="50" MaxWidth="200" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
              <TextBox Grid.Row="1" Text="{Binding AuthPassword, Mode=TwoWay}" Watermark="Password" Margin="2" MinWidth="50" MaxWidth="200" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
            </Grid>
            <TextBox Grid.Column="1" Text="{Binding AuthBearer, Mode=TwoWay}" Watermark="Bearer Token" Margin="2,3" MinWidth="50" MaxWidth="200" ScrollViewer.HorizontalScrollBarVisibility="Auto" IsVisible="{Binding IsAuthBearer}"/>
          </Grid>
        </TabItem>
        <TabItem Header="Headers">

        </TabItem>
        <TabItem Header="Body">
          <TextBox AcceptsReturn="True" AcceptsTab="True" Text="{Binding RequestBody, Mode=TwoWay}" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" TextWrapping="Wrap" />
        </TabItem>
        <TabItem Header="Settings">

        </TabItem>
      </TabControl>

      <TabControl Grid.Row="2" Grid.Column="2" Margin="5">
        <TabItem Header="Response">
          <TabControl>
            <TabItem Header="Json">
              <TextBox AcceptsReturn="True" AcceptsTab="True" IsReadOnly="True" Text="{Binding ResponseBodyJson, Mode=TwoWay}" VerticalAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"/>
            </TabItem>
            <TabItem Header="XML">
              <TextBox AcceptsReturn="True" AcceptsTab="True" IsReadOnly="True" Text="{Binding ResponseBodyXml, Mode=TwoWay}" VerticalAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"/>
            </TabItem>
            <TabItem Header="Raw">
              <TextBox AcceptsReturn="True" AcceptsTab="True" IsReadOnly="True" Text="{Binding ResponseBodyRaw, Mode=TwoWay}" VerticalAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"/>
            </TabItem>
            <TabItem Header="Browser">
              <Decorator x:Name="browserWrapper"/>
            </TabItem>
          </TabControl>
        </TabItem>
        <TabItem Header="Cookies">

        </TabItem>
        <TabItem Header="Headers">

        </TabItem>
      </TabControl>
    </Grid>

  </Grid>

</Window>
